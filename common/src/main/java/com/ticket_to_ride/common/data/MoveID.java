package com.ticket_to_ride.common.data;

public enum MoveID {

    // Claim Route moves
    MOVE_CLAIM_ROUTE_ORGAHILL_TO_MADINO_1,
    MOVE_CLAIM_ROUTE_ORGAHILL_TO_MADINO_2,
    MOVE_CLAIM_ROUTE_ANPHONY_TO_MADINO_1,
    MOVE_CLAIM_ROUTE_ANPHONY_TO_MADINO_2,
    MOVE_CLAIM_ROUTE_SAILANE_TO_MADINO_1,
    MOVE_CLAIM_ROUTE_SAILANE_TO_MADINO_2,
    MOVE_CLAIM_ROUTE_ANPHONY_TO_AUGUSTY,
    MOVE_CLAIM_ROUTE_ANPHONY_TO_HEIRHEIN,
    MOVE_CLAIM_ROUTE_HEIRHEIN_TO_EVANS,
    MOVE_CLAIM_ROUTE_AUGUSTY_TO_MACKILY,
    MOVE_CLAIM_ROUTE_AUGUSTY_TO_FREEGE,
    MOVE_CLAIM_ROUTE_MACKILY_TO_EVANS,
    MOVE_CLAIM_ROUTE_MACKILY_TO_EDDA,
    MOVE_CLAIM_ROUTE_EVANS_TO_VERDANE_1,
    MOVE_CLAIM_ROUTE_EVANS_TO_VERDANE_2,
    MOVE_CLAIM_ROUTE_EVANS_TO_JUNGBY,
    MOVE_CLAIM_ROUTE_VERDANE_TO_MARPHA_1,
    MOVE_CLAIM_ROUTE_VERDANE_TO_MARPHA_2,
    MOVE_CLAIM_ROUTE_MARPHA_TO_GENOA_1,
    MOVE_CLAIM_ROUTE_MARPHA_TO_GENOA_2,
    MOVE_CLAIM_ROUTE_GENOA_TO_MILETOS,
    MOVE_CLAIM_ROUTE_GENOA_TO_RADOS,
    MOVE_CLAIM_ROUTE_RADOS_TO_CHRONOS,
    MOVE_CLAIM_ROUTE_CHRONOS_TO_MILETOS,
    MOVE_CLAIM_ROUTE_CHRONOS_TO_MELGEN_1,
    MOVE_CLAIM_ROUTE_CHRONOS_TO_MELGEN_2,
    MOVE_CLAIM_ROUTE_JUNGBY_TO_EDDA,
    MOVE_CLAIM_ROUTE_FREEGE_TO_DOZEL,
    MOVE_CLAIM_ROUTE_DOZEL_TO_VELTHOME,
    MOVE_CLAIM_ROUTE_VELTHOME_TO_EDDA_1,
    MOVE_CLAIM_ROUTE_VELTHOME_TO_EDDA_2,
    MOVE_CLAIM_ROUTE_VELTHOME_TO_YIED_1,
    MOVE_CLAIM_ROUTE_VELTHOME_TO_YIED_2,
    MOVE_CLAIM_ROUTE_VELTHOME_TO_PHINORA,
    MOVE_CLAIM_ROUTE_YIED_TO_RIVOUGH_1,
    MOVE_CLAIM_ROUTE_YIED_TO_RIVOUGH_2,
    MOVE_CLAIM_ROUTE_SAILANE_TO_SILESIA,
    MOVE_CLAIM_ROUTE_SILESIA_TO_ZAXON,
    MOVE_CLAIM_ROUTE_SAILANE_TO_THROVE,
    MOVE_CLAIM_ROUTE_THROVE_TO_ZAXON,
    MOVE_CLAIM_ROUTE_ZAXON_TO_PHINORA_1,
    MOVE_CLAIM_ROUTE_ZAXON_TO_PHINORA_2,
    MOVE_CLAIM_ROUTE_PHINORA_TO_TIRNANOG,
    MOVE_CLAIM_ROUTE_TIRNANOG_TO_SOPHARA,
    MOVE_CLAIM_ROUTE_SOPHARA_TO_RIVOUGH,
    MOVE_CLAIM_ROUTE_TIRNANOG_TO_ISAAC,
    MOVE_CLAIM_ROUTE_ISAAC_TO_RIVOUGH,
    MOVE_CLAIM_ROUTE_EDDA_TO_MELGEN,
    MOVE_CLAIM_ROUTE_LUTHECIA_TO_MELGEN,
    MOVE_CLAIM_ROUTE_LUTHECIA_TO_GRUTIA,
    MOVE_CLAIM_ROUTE_GRUTIA_TO_THRACIA,
    MOVE_CLAIM_ROUTE_THRACIA_TO_KAPATHOGIA,
    MOVE_CLAIM_ROUTE_THRACIA_TO_MANSTER,
    MOVE_CLAIM_ROUTE_ALSTER_TO_KAPATHOGIA,
    MOVE_CLAIM_ROUTE_ALSTER_TO_MELGEN,
    MOVE_CLAIM_ROUTE_ALSTER_TO_MANSTER,
    MOVE_CLAIM_ROUTE_MANSTER_TO_CONOTE_1,
    MOVE_CLAIM_ROUTE_MANSTER_TO_CONOTE_2,

    // Draw Train Card move
    MOVE_DRAW_TRAIN_CARD,

    // Take Shop card moves
    MOVE_TAKE_SHOP_CARD_1,
    MOVE_TAKE_SHOP_CARD_2,
    MOVE_TAKE_SHOP_CARD_3,
    MOVE_TAKE_SHOP_CARD_4,
    MOVE_TAKE_SHOP_CARD_5,

    // Draw Destination Cards
    MOVE_DRAW_DESTINATION_CARDS,

    /* TODO discuss how to handle keeping cards.
     * Either we can hard code all the possibilities here for keeping and
     * discarding destination cards (as below), or do a little bit of server
     * side verification.
     *
     * KEEP and RTRN correspond to whether the user decides to keep or return
     * the destination card.
     */
     MOVE_CONFIRM_DESTINATION_CARDS_KEEP_KEEP_KEEP,
     MOVE_CONFIRM_DESTINATION_CARDS_RTRN_KEEP_KEEP,
     MOVE_CONFIRM_DESTINATION_CARDS_KEEP_RTRN_KEEP,
     MOVE_CONFIRM_DESTINATION_CARDS_KEEP_KEEP_RTRN,
     MOVE_CONFIRM_DESTINATION_CARDS_KEEP_RTRN_RTRN,
     MOVE_CONFIRM_DESTINATION_CARDS_RTRN_KEEP_RTRN,
     MOVE_CONFIRM_DESTINATION_CARDS_RTRN_RTRN_KEEP,
}
